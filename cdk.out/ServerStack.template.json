{
 "Resources": {
  "lambdamultiplerole315975A7": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonSQSFullAccess"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonSNSFullAccess"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AWSLambdaExecute"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonDynamoDBFullAccess"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonS3FullAccess"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AWSStepFunctionsFullAccess"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ServerStack/lambda_multiple_role/Resource"
   }
  },
  "lambdamultipleroleDefaultPolicy4EA08A57": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "dynamodb:ListStreams",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "dynamodb:DescribeStream",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "fltaskscdk0602BEE5117E",
         "StreamArn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "lambdamultipleroleDefaultPolicy4EA08A57",
    "Roles": [
     {
      "Ref": "lambdamultiplerole315975A7"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ServerStack/lambda_multiple_role/DefaultPolicy/Resource"
   }
  },
  "ServerFedAvgLambda036304A6": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "ImageUri": {
      "Fn::Sub": "${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:ccea41ac2a4e95c593023a58984998b2a5ff33f0935fa788f090614397f97548"
     }
    },
    "Role": {
     "Fn::GetAtt": [
      "lambdamultiplerole315975A7",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "SERVER_S3_ADDRESS": "flserverdatabucketcdk0602",
      "REQUIRED_NUM_CLIENTS": "2",
      "TASKS_TABLE_NAME": "fltaskscdk0602"
     }
    },
    "MemorySize": 1000,
    "PackageType": "Image",
    "Timeout": 900
   },
   "DependsOn": [
    "lambdamultipleroleDefaultPolicy4EA08A57",
    "lambdamultiplerole315975A7"
   ],
   "Metadata": {
    "aws:cdk:path": "ServerStack/ServerFedAvgLambda/Resource",
    "aws:asset:path": "asset.ccea41ac2a4e95c593023a58984998b2a5ff33f0935fa788f090614397f97548",
    "aws:asset:dockerfile-path": "Dockerfile",
    "aws:asset:property": "Code.ImageUri"
   }
  },
  "ServerFedAvgLambdaDynamoDBEventSourceServerStackfltaskscdk06022C4F037CDDB82E8B": {
   "Type": "AWS::Lambda::EventSourceMapping",
   "Properties": {
    "FunctionName": {
     "Ref": "ServerFedAvgLambda036304A6"
    },
    "BatchSize": 5,
    "BisectBatchOnFunctionError": true,
    "EventSourceArn": {
     "Fn::GetAtt": [
      "fltaskscdk0602BEE5117E",
      "StreamArn"
     ]
    },
    "MaximumRetryAttempts": 0,
    "StartingPosition": "TRIM_HORIZON"
   },
   "Metadata": {
    "aws:cdk:path": "ServerStack/ServerFedAvgLambda/DynamoDBEventSource:ServerStackfltaskscdk06022C4F037C/Resource"
   }
  },
  "flserverdatabucketcdk060237DB133B": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "BucketName": "flserverdatabucketcdk0602",
    "Tags": [
     {
      "Key": "aws-cdk:auto-delete-objects",
      "Value": "true"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ServerStack/flserverdatabucketcdk0602/Resource"
   }
  },
  "flserverdatabucketcdk0602Policy1E76CAF8": {
   "Type": "AWS::S3::BucketPolicy",
   "Properties": {
    "Bucket": {
     "Ref": "flserverdatabucketcdk060237DB133B"
    },
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:List*"
       ],
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::GetAtt": [
          "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
          "Arn"
         ]
        }
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "flserverdatabucketcdk060237DB133B",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "flserverdatabucketcdk060237DB133B",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ServerStack/flserverdatabucketcdk0602/Policy/Resource"
   }
  },
  "flserverdatabucketcdk0602AutoDeleteObjectsCustomResourceA1F12078": {
   "Type": "Custom::S3AutoDeleteObjects",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
      "Arn"
     ]
    },
    "BucketName": {
     "Ref": "flserverdatabucketcdk060237DB133B"
    }
   },
   "DependsOn": [
    "flserverdatabucketcdk0602Policy1E76CAF8"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ServerStack/flserverdatabucketcdk0602/AutoDeleteObjectsCustomResource/Default"
   }
  },
  "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ServerStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Role"
   }
  },
  "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "e57c1acaa363d7d2b81736776007a7091bc73dff4aeb8135627c4511a51e7dca.zip"
    },
    "Timeout": 900,
    "MemorySize": 128,
    "Handler": "__entrypoint__.handler",
    "Role": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      "Arn"
     ]
    },
    "Runtime": "nodejs14.x",
    "Description": {
     "Fn::Join": [
      "",
      [
       "Lambda function for auto-deleting objects in ",
       {
        "Ref": "flserverdatabucketcdk060237DB133B"
       },
       " S3 bucket."
      ]
     ]
    }
   },
   "DependsOn": [
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092"
   ],
   "Metadata": {
    "aws:cdk:path": "ServerStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Handler",
    "aws:asset:path": "asset.e57c1acaa363d7d2b81736776007a7091bc73dff4aeb8135627c4511a51e7dca",
    "aws:asset:property": "Code"
   }
  },
  "fltaskscdk0602BEE5117E": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "KeySchema": [
     {
      "AttributeName": "Task_Name",
      "KeyType": "HASH"
     },
     {
      "AttributeName": "Task_ID",
      "KeyType": "RANGE"
     }
    ],
    "AttributeDefinitions": [
     {
      "AttributeName": "Task_Name",
      "AttributeType": "S"
     },
     {
      "AttributeName": "Task_ID",
      "AttributeType": "S"
     }
    ],
    "ProvisionedThroughput": {
     "ReadCapacityUnits": 5,
     "WriteCapacityUnits": 5
    },
    "StreamSpecification": {
     "StreamViewType": "NEW_IMAGE"
    },
    "TableName": "fltaskscdk0602"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ServerStack/fltaskscdk0602/Resource"
   }
  },
  "lambdasnsroleC5D00AD7": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonSQSFullAccess"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonSNSFullAccess"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AWSLambdaExecute"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ServerStack/lambda_sns_role/Resource"
   }
  },
  "serverinitsnslambda4661DA90": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "5bbe83755819920e6e1a94bd1e678a8fb0964501acfb17f57d098ce72ccedcc6.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "lambdasnsroleC5D00AD7",
      "Arn"
     ]
    },
    "Handler": "serverinitsns.lambda_handler",
    "Runtime": "python3.9",
    "Timeout": 900
   },
   "DependsOn": [
    "lambdasnsroleC5D00AD7"
   ],
   "Metadata": {
    "aws:cdk:path": "ServerStack/serverinitsns_lambda/Resource",
    "aws:asset:path": "asset.5bbe83755819920e6e1a94bd1e678a8fb0964501acfb17f57d098ce72ccedcc6",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "globalmodelready": {
   "Type": "AWS::SNS::Topic",
   "Metadata": {
    "aws:cdk:path": "ServerStack/global-model-ready"
   }
  },
  "afterAgglambdaServiceRoleB9FC6D91": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ServerStack/afterAgg_lambda/ServiceRole/Resource"
   }
  },
  "afterAgglambda62CE9D5C": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "5bbe83755819920e6e1a94bd1e678a8fb0964501acfb17f57d098ce72ccedcc6.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "afterAgglambdaServiceRoleB9FC6D91",
      "Arn"
     ]
    },
    "Handler": "afterAgg.lambda_handler",
    "Runtime": "python3.9"
   },
   "DependsOn": [
    "afterAgglambdaServiceRoleB9FC6D91"
   ],
   "Metadata": {
    "aws:cdk:path": "ServerStack/afterAgg_lambda/Resource",
    "aws:asset:path": "asset.5bbe83755819920e6e1a94bd1e678a8fb0964501acfb17f57d098ce72ccedcc6",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "prepareNextRoundlambdaServiceRoleA7CF9D99": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ServerStack/prepareNextRound_lambda/ServiceRole/Resource"
   }
  },
  "prepareNextRoundlambda4832300C": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "5bbe83755819920e6e1a94bd1e678a8fb0964501acfb17f57d098ce72ccedcc6.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "prepareNextRoundlambdaServiceRoleA7CF9D99",
      "Arn"
     ]
    },
    "Handler": "prepareNextRound.lambda_handler",
    "Runtime": "python3.9"
   },
   "DependsOn": [
    "prepareNextRoundlambdaServiceRoleA7CF9D99"
   ],
   "Metadata": {
    "aws:cdk:path": "ServerStack/prepareNextRound_lambda/Resource",
    "aws:asset:path": "asset.5bbe83755819920e6e1a94bd1e678a8fb0964501acfb17f57d098ce72ccedcc6",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "endTraininglambdarole039D456C": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonSNSFullAccess"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AWSLambdaExecute"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ServerStack/endTraining_lambda_role/Resource"
   }
  },
  "endTraininglambda08715873": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "5bbe83755819920e6e1a94bd1e678a8fb0964501acfb17f57d098ce72ccedcc6.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "endTraininglambdarole039D456C",
      "Arn"
     ]
    },
    "Handler": "endTraining.lambda_handler",
    "Runtime": "python3.9"
   },
   "DependsOn": [
    "endTraininglambdarole039D456C"
   ],
   "Metadata": {
    "aws:cdk:path": "ServerStack/endTraining_lambda/Resource",
    "aws:asset:path": "asset.5bbe83755819920e6e1a94bd1e678a8fb0964501acfb17f57d098ce72ccedcc6",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "FLServerStateMachineRoleE472C60A": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": {
         "Fn::Join": [
          "",
          [
           "states.",
           {
            "Ref": "AWS::Region"
           },
           ".amazonaws.com"
          ]
         ]
        }
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ServerStack/FLServerStateMachine/Role/Resource"
   }
  },
  "FLServerStateMachineRoleDefaultPolicyAAC0FED3": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "afterAgglambda62CE9D5C",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "endTraininglambda08715873",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "prepareNextRoundlambda4832300C",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "serverinitsnslambda4661DA90",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "afterAgglambda62CE9D5C",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "endTraininglambda08715873",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "prepareNextRoundlambda4832300C",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "serverinitsnslambda4661DA90",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "sns:Publish",
       "Effect": "Allow",
       "Resource": {
        "Ref": "globalmodelready"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "FLServerStateMachineRoleDefaultPolicyAAC0FED3",
    "Roles": [
     {
      "Ref": "FLServerStateMachineRoleE472C60A"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ServerStack/FLServerStateMachine/Role/DefaultPolicy/Resource"
   }
  },
  "FLServerStateMachine29BA3774": {
   "Type": "AWS::StepFunctions::StateMachine",
   "Properties": {
    "RoleArn": {
     "Fn::GetAtt": [
      "FLServerStateMachineRoleE472C60A",
      "Arn"
     ]
    },
    "DefinitionString": {
     "Fn::Join": [
      "",
      [
       "{\"StartAt\":\"Initalize server\",\"States\":{\"Initalize server\":{\"Next\":\"Notify clients\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Catch\":[{\"ErrorEquals\":[\"States.ALL\"],\"Next\":\"Execution Failed\"}],\"Type\":\"Task\",\"TimeoutSeconds\":900,\"ResultSelector\":{\"taskresult.$\":\"$.Payload\"},\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
       {
        "Fn::GetAtt": [
         "serverinitsnslambda4661DA90",
         "Arn"
        ]
       },
       "\",\"Payload\":{\"sns_topic_server\":\"",
       {
        "Ref": "globalmodelready"
       },
       "\",\"sqs_region_1\":\"us-east-1\",\"client_queue_name_1\":\"clientsqs-us-east-1\",\"sqs_region_2\":\"us-west-2\",\"client_queue_name_2\":\"clientsqs-us-west-2\",\"roundId\":\"0\",\"member_ID\":\"0\",\"numClientsRequired\":\"2\",\"numClientEpochs\":\"5\",\"weightsFile\":\"MODEL.py\"}}},\"Notify clients\":{\"Next\":\"Next FL iteration\",\"Catch\":[{\"ErrorEquals\":[\"States.ALL\"],\"Next\":\"Execution Failed\"}],\"Type\":\"Task\",\"TimeoutSeconds\":1000,\"ResultPath\":\"$.taskresult\",\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::sns:publish.waitForTaskToken\",\"Parameters\":{\"TopicArn\":\"",
       {
        "Ref": "globalmodelready"
       },
       "\",\"Message\":{\"TaskToken.$\":\"$$.Task.Token\",\"Input.$\":\"$.taskresult\"}}},\"No: next FL iteration\":{\"Next\":\"Notify clients\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"TimeoutSeconds\":900,\"ResultSelector\":{\"taskresult.$\":\"$.Payload\"},\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
       {
        "Fn::GetAtt": [
         "prepareNextRoundlambda4832300C",
         "Arn"
        ]
       },
       "\",\"Payload\":{\"Input.$\":\"$\"}}},\"Satisfied?\":{\"Type\":\"Choice\",\"Choices\":[{\"Variable\":\"$.iterator.continue\",\"StringEquals\":\"True\",\"Next\":\"No: next FL iteration\"}],\"Default\":\"Yes: end training\"},\"Next FL iteration\":{\"Next\":\"Satisfied?\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Catch\":[{\"ErrorEquals\":[\"States.ALL\"],\"Next\":\"Execution Failed\"}],\"Type\":\"Task\",\"ResultSelector\":{\"iterator.$\":\"$.Payload\"},\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
       {
        "Fn::GetAtt": [
         "afterAgglambda62CE9D5C",
         "Arn"
        ]
       },
       "\",\"Payload\":{\"Input.$\":\"$\",\"count_round\":\"8\",\"step_round\":\"1\"}}},\"Execution Failed\":{\"Type\":\"Fail\"},\"Yes: end training\":{\"End\":true,\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"TimeoutSeconds\":900,\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
       {
        "Fn::GetAtt": [
         "endTraininglambda08715873",
         "Arn"
        ]
       },
       "\",\"Payload\":{\"Input.$\":\"$\",\"sns_topic_server\":\"",
       {
        "Ref": "globalmodelready"
       },
       "\"}}}}}"
      ]
     ]
    }
   },
   "DependsOn": [
    "FLServerStateMachineRoleDefaultPolicyAAC0FED3",
    "FLServerStateMachineRoleE472C60A"
   ],
   "Metadata": {
    "aws:cdk:path": "ServerStack/FLServerStateMachine/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/21Ry27CMBD8Fu7GLaU/UGiRkFopCr0jx1nINok38jpUUZR/rx9AoerFO/uY8Xr8JJfP8nGmvnmuy3reYCHHnVO6Fr60H1G1csypAbE+mBgzalAPIU1oEo1qi1LJ8ZV0DXbbqiNseqMdkgljV/x2AuN21FsNH6rr0BxD+5/qhTEJ0HavmMGxvFF/CZXQkzl0xOjIDivFIHgpx1Xv51xQPqMUfte+y1MSyJMoB6NaKr0Bn6pIL45g8rqXLdLVbFiOoU0dahHPJMEOusN5ez+yUdiIdUWoQXhTnX+hrtBE6dv8D3HvFNee/h6N3ZoT1Z5vOOuLBrmaJhHX8ArHaGLPjtocOJoYP+qK71qZpROWYMXt7JpMicntbHAVmYelXCzkYvbFiHPbG4ctyDzFH2KUurMuAgAA"
   },
   "Metadata": {
    "aws:cdk:path": "ServerStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}